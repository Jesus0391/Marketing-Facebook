# This is a sample build configuration for .NET Core.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: microsoft/aspnetcore-build

pipelines:
  default:
    - step:
        script: # Modify the commands below to build your repository.
          - echo "Default executing..."
           # Generate build number
          - BUILD_NUMBER=`git log --oneline | wc -l`
          - echo "Build number':' ${BUILD_NUMBER}"
           # Install Nuget Package
          - apt-get update && apt-get install -y nuget
           # Configure Nuget Package
          - nuget setApiKey ${NUGET_APIKEY} -Source ${NUGET_URL}
          # Restore package of Private Server
          - nuget restore -source ${NUGET_URL}
          # Restore packages
          - dotnet restore
          # Build project
          - dotnet build
          # Run tests
          - dotnet test ${PROJECT_NAME}.Tests/${PROJECT_NAME}.Tests.csproj
          # Create package
          - dotnet pack --configuration ${BUILD_CONFIGURATION} --version-suffix=beta-$BUILD_NUMBER
          # Push generated package(s)
          - nuget push ${PROJECT_NAME}/bin/${BUILD_CONFIGURATION}/*.nupkg -Source ${NUGET_URL}
  branches:
    master:
      - step:
          script: # Modify the commands below to build your repository.
            - echo "Master executing..."
            # Generate build number
            #- BUILD_NUMBER=`git log --oneline | wc -l`
            #- echo "Build number':' ${BUILD_NUMBER}"
            # Install Nuget Package
            - apt-get update && apt-get install -y nuget
            # Configure Nuget Package
            - nuget setApiKey ${NUGET_APIKEY} -Source ${NUGET_URL}
            # Restore package of Private Server
            - nuget restore -source ${NUGET_URL}
            # Restore packages
            - dotnet restore
            # Build project
            - dotnet build
            # Run tests
            - dotnet test ${PROJECT_NAME}.Tests/${PROJECT_NAME}.Tests.csproj
            # Create package
            - dotnet pack --configuration ${BUILD_CONFIGURATION} --version-suffix #=release-$BUILD_NUMBER
            # Push generated package(s)
            - nuget push ${PROJECT_NAME}/bin/${BUILD_CONFIGURATION}/*.nupkg -Source ${NUGET_URL}
    develop:
      - step:
          script: # Modify the commands below to build your repository.
            - echo "Develop executing..."
            # Generate build number
            - BUILD_NUMBER=`git log --oneline | wc -l`
            - echo "Build number':' ${BUILD_NUMBER}"
            # Install Nuget Package
            - apt-get update && apt-get install -y nuget
            # Configure Nuget Package
            - nuget setApiKey ${NUGET_APIKEY} -Source ${NUGET_URL}
            # Restore package of Private Server
            #- nuget restore -source ${NUGET_URL}
            # Restore packages
            - dotnet restore
            # Build project
            - dotnet build
            # Run tests
            # - dotnet test ${PROJECT_NAME}.Tests/${PROJECT_NAME}.Tests.csproj
            # Create package
            - dotnet pack --configuration ${BUILD_CONFIGURATION} --version-suffix=beta-$BUILD_NUMBER
            # Push generated package(s)
            - nuget push ${PROJECT_NAME}/bin/${BUILD_CONFIGURATION}/*.nupkg -Source ${NUGET_URL}